services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: review-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports: ["5433:5432"]

  eureka:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka
    environment:
      SERVER_PORT: "8762"
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    ports:
      - "8762:8762"
    healthcheck:
      # usa actuator si lo tienes:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8762/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  gateway:
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    container_name: gateway
    depends_on:
      eureka:
        condition: service_healthy
    environment:
      SERVER_PORT: "8082"
      # MUY IMPORTANTE: en contenedores, apuntar a 'eureka' (nombre del servicio), no localhost
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8762/eureka/"
      # opcional: identifica host/puerto para el registro
      EUREKA_INSTANCE_HOSTNAME: "gateway"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "false"
    ports:
      - "8082:8082"

  swipe-service:
    build:
      context: .
      dockerfile: Swipe-service/Dockerfile
    environment:
      SERVER_PORT: "8081"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/review-db"
      SPRING_DATASOURCE_USERNAME: "admin"
      SPRING_DATASOURCE_PASSWORD: "admin"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8762/eureka/"
    depends_on: ["postgres","eureka"]
    ports: ["8081:8081"]

volumes:
  pgdata:
